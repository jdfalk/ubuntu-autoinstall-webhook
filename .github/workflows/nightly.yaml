name: Nightly Build and Publish

on:
  schedule:
    - cron: "0 0 * * *"  # Runs every night at midnight UTC
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  packages: write
  id-token: write  # Required for Sigstore Cosign

jobs:
  build:
    name: Build and Test Nightly
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.24'
          cache: true

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Tests
        run: go test -v ./...

      - name: Build Nightly Binaries
        run: |
          mkdir -p dist
          DATE_TAG=$(date +'%Y%m%d-%H%M%S')
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/webhook-nightly-${{ matrix.goos }}-${{ matrix.goarch }}-$DATE_TAG .

      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nightly-binaries-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.run_id }}
          path: dist/
          if-no-files-found: ignore

  release:
    name: Publish Nightly Binaries
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built Binaries
        uses: actions/download-artifact@v4
        with:
          pattern: nightly-binaries-*
          merge-multiple: true
          path: dist/

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: "v2.0.1"

      - name: Generate Attestation for Nightly Binaries
        run: |
          for file in dist/*; do
            cosign attest --predicate attestation.json --type spdx --yes $file
          done

  docker:
    name: Build and Push Multi-Arch Nightly Docker Image
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build and Push Multi-Arch Nightly Docker Image with Kaniko
        run: |
          export IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/ubuntu-autoinstall-webhook"
          export DATE_TAG=$(date +'%Y%m%d-%H%M%S')
          export TAG="nightly"
          export FULL_TAG="$IMAGE_NAME:$TAG-$DATE_TAG"

          docker run --rm \
            --privileged \
            -v "$(pwd)":/workspace \
            -v /kaniko/.docker:/kaniko/.docker \
            gcr.io/kaniko-project/executor:latest \
            --context /workspace \
            --dockerfile Dockerfile \
            --destination $FULL_TAG \
            --destination $IMAGE_NAME:$TAG \
            --platform=linux/amd64,linux/arm64

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: "v2.0.1"

      - name: Generate Attestation for Nightly Docker Image
        run: |
          export IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/ubuntu-autoinstall-webhook"
          export DATE_TAG=$(date +'%Y%m%d-%H%M%S')
          cosign attest --predicate attestation.json --type spdx --yes $IMAGE_NAME:nightly-$DATE_TAG
          cosign attest --predicate attestation.json --type spdx --yes $IMAGE_NAME:nightly