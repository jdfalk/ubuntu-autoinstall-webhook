// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockFileEditor is an autogenerated mock type for the FileEditor type
type MockFileEditor struct {
	mock.Mock
}

type MockFileEditor_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFileEditor) EXPECT() *MockFileEditor_Expecter {
	return &MockFileEditor_Expecter{mock: &_m.Mock}
}

// CreateCloudInitDirs provides a mock function with given fields: macAddress, hostname
func (_m *MockFileEditor) CreateCloudInitDirs(macAddress string, hostname string) error {
	ret := _m.Called(macAddress, hostname)

	if len(ret) == 0 {
		panic("no return value specified for CreateCloudInitDirs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(macAddress, hostname)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFileEditor_CreateCloudInitDirs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateCloudInitDirs'
type MockFileEditor_CreateCloudInitDirs_Call struct {
	*mock.Call
}

// CreateCloudInitDirs is a helper method to define mock.On call
//   - macAddress string
//   - hostname string
func (_e *MockFileEditor_Expecter) CreateCloudInitDirs(macAddress interface{}, hostname interface{}) *MockFileEditor_CreateCloudInitDirs_Call {
	return &MockFileEditor_CreateCloudInitDirs_Call{Call: _e.mock.On("CreateCloudInitDirs", macAddress, hostname)}
}

func (_c *MockFileEditor_CreateCloudInitDirs_Call) Run(run func(macAddress string, hostname string)) *MockFileEditor_CreateCloudInitDirs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockFileEditor_CreateCloudInitDirs_Call) Return(_a0 error) *MockFileEditor_CreateCloudInitDirs_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileEditor_CreateCloudInitDirs_Call) RunAndReturn(run func(string, string) error) *MockFileEditor_CreateCloudInitDirs_Call {
	_c.Call.Return(run)
	return _c
}

// ValidateCloudInitFiles provides a mock function with given fields: files
func (_m *MockFileEditor) ValidateCloudInitFiles(files map[string][]byte) error {
	ret := _m.Called(files)

	if len(ret) == 0 {
		panic("no return value specified for ValidateCloudInitFiles")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(map[string][]byte) error); ok {
		r0 = rf(files)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFileEditor_ValidateCloudInitFiles_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateCloudInitFiles'
type MockFileEditor_ValidateCloudInitFiles_Call struct {
	*mock.Call
}

// ValidateCloudInitFiles is a helper method to define mock.On call
//   - files map[string][]byte
func (_e *MockFileEditor_Expecter) ValidateCloudInitFiles(files interface{}) *MockFileEditor_ValidateCloudInitFiles_Call {
	return &MockFileEditor_ValidateCloudInitFiles_Call{Call: _e.mock.On("ValidateCloudInitFiles", files)}
}

func (_c *MockFileEditor_ValidateCloudInitFiles_Call) Run(run func(files map[string][]byte)) *MockFileEditor_ValidateCloudInitFiles_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string][]byte))
	})
	return _c
}

func (_c *MockFileEditor_ValidateCloudInitFiles_Call) Return(_a0 error) *MockFileEditor_ValidateCloudInitFiles_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileEditor_ValidateCloudInitFiles_Call) RunAndReturn(run func(map[string][]byte) error) *MockFileEditor_ValidateCloudInitFiles_Call {
	_c.Call.Return(run)
	return _c
}

// ValidateIpxeFile provides a mock function with given fields: content
func (_m *MockFileEditor) ValidateIpxeFile(content []byte) error {
	ret := _m.Called(content)

	if len(ret) == 0 {
		panic("no return value specified for ValidateIpxeFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(content)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFileEditor_ValidateIpxeFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateIpxeFile'
type MockFileEditor_ValidateIpxeFile_Call struct {
	*mock.Call
}

// ValidateIpxeFile is a helper method to define mock.On call
//   - content []byte
func (_e *MockFileEditor_Expecter) ValidateIpxeFile(content interface{}) *MockFileEditor_ValidateIpxeFile_Call {
	return &MockFileEditor_ValidateIpxeFile_Call{Call: _e.mock.On("ValidateIpxeFile", content)}
}

func (_c *MockFileEditor_ValidateIpxeFile_Call) Run(run func(content []byte)) *MockFileEditor_ValidateIpxeFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *MockFileEditor_ValidateIpxeFile_Call) Return(_a0 error) *MockFileEditor_ValidateIpxeFile_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileEditor_ValidateIpxeFile_Call) RunAndReturn(run func([]byte) error) *MockFileEditor_ValidateIpxeFile_Call {
	_c.Call.Return(run)
	return _c
}

// WriteIpxeFile provides a mock function with given fields: macAddress, content
func (_m *MockFileEditor) WriteIpxeFile(macAddress string, content []byte) error {
	ret := _m.Called(macAddress, content)

	if len(ret) == 0 {
		panic("no return value specified for WriteIpxeFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []byte) error); ok {
		r0 = rf(macAddress, content)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFileEditor_WriteIpxeFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteIpxeFile'
type MockFileEditor_WriteIpxeFile_Call struct {
	*mock.Call
}

// WriteIpxeFile is a helper method to define mock.On call
//   - macAddress string
//   - content []byte
func (_e *MockFileEditor_Expecter) WriteIpxeFile(macAddress interface{}, content interface{}) *MockFileEditor_WriteIpxeFile_Call {
	return &MockFileEditor_WriteIpxeFile_Call{Call: _e.mock.On("WriteIpxeFile", macAddress, content)}
}

func (_c *MockFileEditor_WriteIpxeFile_Call) Run(run func(macAddress string, content []byte)) *MockFileEditor_WriteIpxeFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].([]byte))
	})
	return _c
}

func (_c *MockFileEditor_WriteIpxeFile_Call) Return(_a0 error) *MockFileEditor_WriteIpxeFile_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileEditor_WriteIpxeFile_Call) RunAndReturn(run func(string, []byte) error) *MockFileEditor_WriteIpxeFile_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFileEditor creates a new instance of MockFileEditor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFileEditor(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFileEditor {
	mock := &MockFileEditor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
