syntax = "proto3";

package certadmin;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/jdfalk/ubuntu-autoinstall-webhook/internal/proto/certadmin";

service CertAdminService {
  // Server information (unauthenticated)
  rpc GetServerInfo(google.protobuf.Empty) returns (ServerInfoResponse);

  // Certificate operations
  rpc GetCACertificate(google.protobuf.Empty) returns (CACertificateResponse);
  rpc IssueCertificate(IssueCertificateRequest) returns (CertificateResponse);
  rpc RenewCertificate(RenewCertificateRequest) returns (CertificateResponse);
  rpc ListCertificates(google.protobuf.Empty) returns (ListCertificatesResponse);
  rpc RevokeCertificate(RevokeCertificateRequest) returns (google.protobuf.Empty);

  // API key management
  rpc CreateAPIKey(CreateAPIKeyRequest) returns (APIKeyResponse);
  rpc ListAPIKeys(google.protobuf.Empty) returns (ListAPIKeysResponse);
  rpc RevokeAPIKey(RevokeAPIKeyRequest) returns (google.protobuf.Empty);
}

// Server info
message ServerInfoResponse {
  string server_version = 1;
  string api_version = 2;
  string client_address = 3;
  google.protobuf.Timestamp server_time = 4;
  bool requires_auth = 5;
}

// CA certificate
message CACertificateResponse {
  bytes certificate = 1;
}

// Issue certificate
message IssueCertificateRequest {
  bytes csr = 1;
  string common_name = 2;
  string organization = 3;
  repeated string sans = 4;
}

// Certificate response
message CertificateResponse {
  bytes certificate = 1;
}

// Renew certificate
message RenewCertificateRequest {
  bytes certificate = 1;
}

// Certificate information
message CertificateInfo {
  string serial_number = 1;
  string subject = 2;
  google.protobuf.Timestamp not_before = 3;
  google.protobuf.Timestamp not_after = 4;
  bool is_revoked = 5;
  repeated string sans = 6;
}

// List certificates
message ListCertificatesResponse {
  repeated CertificateInfo certificates = 1;
}

// Revoke certificate
message RevokeCertificateRequest {
  string serial_number = 1;
}

// API key information
message APIKeyInfo {
  string name = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp last_used_at = 3;
  string description = 4;
}

// Create API key
message CreateAPIKeyRequest {
  string name = 1;
  string description = 2;
}

// API key response
message APIKeyResponse {
  string name = 1;
  string key = 2;
  google.protobuf.Timestamp created_at = 3;
  string description = 4;
}

// List API keys
message ListAPIKeysResponse {
  repeated APIKeyInfo keys = 1;
}

// Revoke API key
message RevokeAPIKeyRequest {
  string name = 1;
}
